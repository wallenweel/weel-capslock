Do(actions*) {  ; action :=  ; {  ;   ,run: ""       Run, %run%  ;   ,func: ""      %fun%()  ;   ,param: ""     valid if has %func%(param)  ;   ,csa: "" | []  with Ctrl|Shift|Alt, example: "010" | [0,1,0]  ; }  For n, action in actions {    If (!IsObject(action))      Continue    keys := action.csa    keys := IsObject(keys) ? keys : StrSplit(keys)    If (!keys || !keys.Length()) {      keys := [0, 0, 0]    }    If (!CheckCSA(keys))      Continue    If (action["run"])      Run % action["run"]    If (action["func"] && IsFunc(action["func"]))      action["func"](action.param)  }  Return}CheckCSA(keys) {  CSA := ["Ctrl", "Shift", "Alt"]  For i, stus in keys {    If (GetKeyState(CSA[i], "P") != stus)      Return false  }  Return true}RunIt(exec) {  Run %exec%}EdgeApp(id) {  Path = C:\Program Files (x86)\Microsoft\Edge Beta\Application\msedge_proxy.exe  Profile = Profile 1  ; App=%Path% "--profile-directory=%Profile%" "--app-id=%id%"  App = %Path% "--app-id=%id%"    Return App}; get-appxpackage > UWP_Apps_List.txtUWP(id) {  App = "shell:AppsFolder\%id%"  Return App}SwitchTaskbar() {  VarSetCapacity(APPBARDATA, A_PtrSize = 4 ? 36 : 48)  NumPut(DllCall("Shell32\SHAppBarMessage", "UInt", 4 ; ABM_GETSTATE  , "Ptr", &APPBARDATA  , "Int")  ? 2 : 1, APPBARDATA, A_PtrSize = 4 ? 32 : 40) ; 2 - ABS_ALWAYSONTOP, 1 - ABS_AUTOHIDE  , DllCall("Shell32\SHAppBarMessage", "UInt", 10 ; ABM_SETSTATE  , "Ptr", &APPBARDATA)  KeyWait, % A_ThisHotkey}TopCurrentWindow() {  Winset, Alwaysontop, , A}GoSleep() {  DllCall("PowrProf\SetSuspendState", "int", 0, "int", 0, "int", 0)  Return}RotateDisplay(param) {  dev := param.dev  deg := param.deg  lightness := param.ligntness  if (!dev)    Run bins/display64.exe /display:none /rotate:%deg%  else    Run bins/display64.exe /display:none /device:%dev% /rotate:%deg%}SwitchDisplays(param) {  ; internal | clone | external | extend  Run, DisplaySwitch.exe /%param%}PrevDesktop() {  Send ^#{Left}}NextDesktop() {  Send ^#{Right}}Send2PrevDisplay() {  Send +#{Left}}Send2NextDisplay() {  Send +#{Right}}SwitchTaskApp(num) {  Send #{%num%}}ShowOrHideFiles() {  RegRead, ValorHidden, HKEY_CURRENT_USER, Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced, Hidden  If (ValorHidden = 2) {    RegWrite, REG_DWORD, HKEY_CURRENT_USER, Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced, Hidden, 1  } else {    RegWrite, REG_DWORD, HKEY_CURRENT_USER, Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced, Hidden, 2  }  If (WinActive("ahk_exe explorer.exe"))    Send, {F5}  Return}